{"ast":null,"code":"var _jsxFileName = \"C:\\\\UI-test\\\\Wineries\\\\client\\\\src\\\\common\\\\components\\\\QuestionnaireForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import '../../styles//QuestionnaireForm.css';\n\n// function QuestionnaireForm({ questionnaireState, setQuestionnaireState }) {\n//   const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n\n//   const handleNextClick = () => {\n//     setCurrentQuestionIndex(currentQuestionIndex + 1);\n//   };\n\n//   const handlePreviousClick = () => {\n//     setCurrentQuestionIndex(currentQuestionIndex - 1);\n//   };\n\n//   const handleCheckboxChange = (e) => {\n//     const { name, checked } = e.target;\n//     setQuestionnaireState({\n//       ...questionnaireState,\n//       [name]: checked,\n//     });\n//   };\n\n//   const handleRadioChange = (e) => {\n//     const { name, value } = e.target;\n//     setQuestionnaireState({\n//       ...questionnaireState,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleRangeChange = (e) => {\n//     const { name, value } = e.target;\n//     setQuestionnaireState({\n//       ...questionnaireState,\n//       [name]: parseInt(value),\n//     });\n//   };\n\n//   const handleTrueFalseChange = (e) => {\n//     const { name, value } = e.target;\n//     setQuestionnaireState({\n//       ...questionnaireState,\n//       [name]: value === 'true',\n//     });\n//   };\n\n//   const questions = [\n//     {\n//       type: 'range',\n//       label: 'Question One:',\n//       name: 'questionOne',\n//       min: 0,\n//       max: 10,\n//       value: questionnaireState.questionOne,\n//       onChange: handleRangeChange,\n//     },\n//     {\n//       type: 'checkbox',\n//       label: 'Question Two:',\n//       name: 'questionTwo',\n//       value: questionnaireState.questionTwo,\n//       onChange: handleCheckboxChange,\n//     },\n//     {\n//       type: 'select',\n//       label: 'Question Three:',\n//       name: 'questionThree',\n//       value: questionnaireState.questionThree,\n//       onChange: handleRadioChange,\n//       options: [\n//         { value: '', label: 'Select an option' },\n//         { value: 'optionOne', label: 'Option One' },\n//         { value: 'optionTwo', label: 'Option Two' },\n//         { value: 'optionThree', label: 'Option Three' },\n//       ],\n//     },\n//     {\n//       type: 'radio',\n//       label: 'Question Four:',\n//       name: 'questionFour',\n//       options: [\n//         { value: 'true', label: 'True' },\n//         { value: 'false', label: 'False' },\n//       ],\n//       value: questionnaireState.questionFour,\n//       onChange: handleRadioChange,\n//     },\n//     {\n//       type: 'textarea',\n//       label: 'Question Five:',\n//       name: 'questionFive',\n//       value: questionnaireState.questionFive,\n//       className: \"textarea-qform\",\n//       onChange: handleTrueFalseChange,\n//     },\n//   ];\n\n//   const currentQuestions = [\n//     questions[0],\n//     questions[1],\n//     questions[2],\n//     questions[3],\n//   ];\n\n//   const currentQuestion = currentQuestions[currentQuestionIndex];\n\n//   return (\n//     <div class=\"div-qform\">\n//       {/* <div style={{ display: currentQuestionIndex === 3 ? 'none' : 'block' }}> */}\n//       <div className={currentQuestionIndex === 3 ? 'hidden' : 'visible'}>\n//         <form className= \"form-qform\">\n//           <div>\n//             <label className= \"label-qform\">{currentQuestion.label}</label>\n//             {currentQuestion.type === 'range' && (\n//               <input\n//                 className= \"input-qform\"\n//                 type=\"range\"\n//                 name={currentQuestion.name}\n//                 min={currentQuestion.min}\n//                 max={currentQuestion.max}\n//                 value={currentQuestion.value}\n//                 onChange={currentQuestion.onChange}\n//             />\n//             )}\n\n//             {currentQuestion.type === 'checkbox' && (\n//             <input\n//              className= \"input-qform\"   \n//              type=\"checkbox\"\n//              name={currentQuestion.name}\n//              checked={currentQuestion.value}\n//              onChange={currentQuestion.onChange}\n//             />\n//             )}\n\n//             {currentQuestion.type === 'select' && (\n//             <select\n//             name={currentQuestion.name}\n//             value={currentQuestion.value}\n//             onChange={currentQuestion.onChange}>\n\n//             {currentQuestion.options.map((option) => (\n//               <option key={option.value} value={option.value}\n//               >\n//                 {option.label}\n//               </option>\n//                 ))}\n//             </select>\n//             )}\n\n//             {currentQuestion.type === 'radio' && (\n//             <div>\n//                 {currentQuestion.options.map((option) => (\n//                 <label className= \"label-qform\" key={option.value}>\n//                     {option.label}\n//                     <input\n//                     className= \"input-qform\"\n//                     type=\"radio\"\n//                     name={currentQuestion.name}\n//                     value={option.value}\n//                     checked={currentQuestion.value === option.value}\n//                     onChange={currentQuestion.onChange}\n//                     />\n//                 </label>\n//                 ))}\n//             </div>\n//             )}\n\n//             {currentQuestion.type === 'textarea' && (\n//             <textarea\n//                 name={currentQuestion.name}\n//                 value={currentQuestion.value}\n//                 onChange={currentQuestion.onChange}\n//             />\n//             )}\n//         </div>\n//         </form>\n\n//         <div class=\"qform-buttons\">\n//   { currentQuestionIndex > 0 && (\n//     <button className=\"button-qform-NP\" onClick={handlePreviousClick}>Previous</button>\n//   )}\n//   { currentQuestionIndex < currentQuestions.length - 1 && (\n//     <button className=\"button-qform-NP\" onClick={handleNextClick}>Next</button>\n//   )}\n// </div>\n\n//   </div>\n\n//   <div style={{ display: currentQuestionIndex === 3 ? 'block' : 'none' }}>\n//     <p>Thank you for submitting the questionnaire!</p>\n//     <button className=\"button-qform\" onClick={() => setCurrentQuestionIndex(0)}>Start Over</button>\n//   </div>\n// </div>\n// );\n// }\n\n// export default QuestionnaireForm;\n\nimport React, { useState, useEffect } from 'react';\nimport './MultiPageForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MultiPageForm() {\n  _s();\n  const [formData, setFormData] = useState({\n    textInput: '',\n    checkboxInput: false,\n    radioInput: '',\n    selectInput: '',\n    rangeInput: '',\n    textareaInput: '',\n    textInput2: '',\n    textareaInput2: '',\n    textInput3: ''\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(3);\n  useEffect(() => {\n    // Save form data to local storage whenever formData changes\n    localStorage.setItem('formData', JSON.stringify(formData));\n  }, [formData]);\n  useEffect(() => {\n    // Load form data from local storage when component mounts\n    const storedData = localStorage.getItem('formData');\n    if (storedData) {\n      setFormData(JSON.parse(storedData));\n    }\n  }, []);\n  const handleInputChange = event => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = event.target;\n    setFormData({\n      ...formData,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    // Submit form data to server or do other final processing\n    // ...\n    alert('Form submitted successfully!');\n  };\n  const renderPage1 = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Page 1 of \", totalPages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Text Input:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"textInput\",\n        value: formData.textInput,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Checkbox Input:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"checkboxInput\",\n        checked: formData.checkboxInput,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Radio Input:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Option 1\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"radioInput\",\n          value: \"option1\",\n          checked: formData.radioInput === 'option1',\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Option 2\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"radioInput\",\n          value: \"option2\",\n          checked: formData.radioInput === 'option2',\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Input:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"selectInput\",\n        value: formData.selectInput,\n        onChange: handleInputChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"option1\",\n          children: \"Option 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"option2\",\n          children: \"Option 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"option3\",\n          children: \"Option 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n  const renderPage2 = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Page 2 of \", totalPages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Range Input:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        name: \"rangeInput\",\n        min: \"0\",\n        max: \"100\",\n        value: formData.rangeInput,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formData.rangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Free Text Input:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"textareaInput\",\n        value: formData.textareaInput,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Text Input 2:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"textInput2\",\n        value: formData.textInput2,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 5\n  }, this);\n  const renderPage3 = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Page 3 of \", totalPages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Summary of form data:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Text Input: \", formData.textInput]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Checkbox Input: \", formData.checkboxInput ? 'Yes' : 'No']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Radio Input: \", formData.radioInput]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Select Input: \", formData.selectInput]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Range Input: \", formData.rangeInput]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Free Text Input: \", formData.textareaInput]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Text Input 2: \", formData.textInput2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 5\n  }, this);\n  const handlePreviousClick = () => {\n    setCurrentPage(currentPage - 1);\n  };\n  const handleNextClick = () => {\n    setCurrentPage(currentPage + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleFormSubmit,\n    children: [currentPage === 1 && renderPage1(), currentPage === 2 && renderPage2(), currentPage === 3 && renderPage3(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-buttons\",\n      children: [currentPage > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handlePreviousClick,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }, this), currentPage < totalPages ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleNextClick,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 375,\n    columnNumber: 5\n  }, this);\n}\n_s(MultiPageForm, \"E51vQVBNdHXJoGJVS5c/URgji2I=\");\n_c = MultiPageForm;\nexport default MultiPageForm;\nvar _c;\n$RefreshReg$(_c, \"MultiPageForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MultiPageForm","_s","formData","setFormData","textInput","checkboxInput","radioInput","selectInput","rangeInput","textareaInput","textInput2","textareaInput2","textInput3","currentPage","setCurrentPage","totalPages","setTotalPages","localStorage","setItem","JSON","stringify","storedData","getItem","parse","handleInputChange","event","name","value","type","checked","target","handleFormSubmit","preventDefault","alert","renderPage1","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","renderPage2","min","max","renderPage3","handlePreviousClick","handleNextClick","onSubmit","onClick","_c","$RefreshReg$"],"sources":["C:/UI-test/Wineries/client/src/common/components/QuestionnaireForm.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import '../../styles//QuestionnaireForm.css';\r\n\r\n// function QuestionnaireForm({ questionnaireState, setQuestionnaireState }) {\r\n//   const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n\r\n//   const handleNextClick = () => {\r\n//     setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n//   };\r\n\r\n//   const handlePreviousClick = () => {\r\n//     setCurrentQuestionIndex(currentQuestionIndex - 1);\r\n//   };\r\n\r\n//   const handleCheckboxChange = (e) => {\r\n//     const { name, checked } = e.target;\r\n//     setQuestionnaireState({\r\n//       ...questionnaireState,\r\n//       [name]: checked,\r\n//     });\r\n//   };\r\n\r\n//   const handleRadioChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setQuestionnaireState({\r\n//       ...questionnaireState,\r\n//       [name]: value,\r\n//     });\r\n//   };\r\n\r\n//   const handleRangeChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setQuestionnaireState({\r\n//       ...questionnaireState,\r\n//       [name]: parseInt(value),\r\n//     });\r\n//   };\r\n\r\n//   const handleTrueFalseChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setQuestionnaireState({\r\n//       ...questionnaireState,\r\n//       [name]: value === 'true',\r\n//     });\r\n//   };\r\n  \r\n//   const questions = [\r\n//     {\r\n//       type: 'range',\r\n//       label: 'Question One:',\r\n//       name: 'questionOne',\r\n//       min: 0,\r\n//       max: 10,\r\n//       value: questionnaireState.questionOne,\r\n//       onChange: handleRangeChange,\r\n//     },\r\n//     {\r\n//       type: 'checkbox',\r\n//       label: 'Question Two:',\r\n//       name: 'questionTwo',\r\n//       value: questionnaireState.questionTwo,\r\n//       onChange: handleCheckboxChange,\r\n//     },\r\n//     {\r\n//       type: 'select',\r\n//       label: 'Question Three:',\r\n//       name: 'questionThree',\r\n//       value: questionnaireState.questionThree,\r\n//       onChange: handleRadioChange,\r\n//       options: [\r\n//         { value: '', label: 'Select an option' },\r\n//         { value: 'optionOne', label: 'Option One' },\r\n//         { value: 'optionTwo', label: 'Option Two' },\r\n//         { value: 'optionThree', label: 'Option Three' },\r\n//       ],\r\n//     },\r\n//     {\r\n//       type: 'radio',\r\n//       label: 'Question Four:',\r\n//       name: 'questionFour',\r\n//       options: [\r\n//         { value: 'true', label: 'True' },\r\n//         { value: 'false', label: 'False' },\r\n//       ],\r\n//       value: questionnaireState.questionFour,\r\n//       onChange: handleRadioChange,\r\n//     },\r\n//     {\r\n//       type: 'textarea',\r\n//       label: 'Question Five:',\r\n//       name: 'questionFive',\r\n//       value: questionnaireState.questionFive,\r\n//       className: \"textarea-qform\",\r\n//       onChange: handleTrueFalseChange,\r\n//     },\r\n//   ];\r\n\r\n//   const currentQuestions = [\r\n//     questions[0],\r\n//     questions[1],\r\n//     questions[2],\r\n//     questions[3],\r\n//   ];\r\n\r\n//   const currentQuestion = currentQuestions[currentQuestionIndex];\r\n\r\n//   return (\r\n//     <div class=\"div-qform\">\r\n//       {/* <div style={{ display: currentQuestionIndex === 3 ? 'none' : 'block' }}> */}\r\n//       <div className={currentQuestionIndex === 3 ? 'hidden' : 'visible'}>\r\n//         <form className= \"form-qform\">\r\n//           <div>\r\n//             <label className= \"label-qform\">{currentQuestion.label}</label>\r\n//             {currentQuestion.type === 'range' && (\r\n//               <input\r\n//                 className= \"input-qform\"\r\n//                 type=\"range\"\r\n//                 name={currentQuestion.name}\r\n//                 min={currentQuestion.min}\r\n//                 max={currentQuestion.max}\r\n//                 value={currentQuestion.value}\r\n//                 onChange={currentQuestion.onChange}\r\n//             />\r\n//             )}\r\n\r\n//             {currentQuestion.type === 'checkbox' && (\r\n//             <input\r\n//              className= \"input-qform\"   \r\n//              type=\"checkbox\"\r\n//              name={currentQuestion.name}\r\n//              checked={currentQuestion.value}\r\n//              onChange={currentQuestion.onChange}\r\n//             />\r\n//             )}\r\n            \r\n//             {currentQuestion.type === 'select' && (\r\n//             <select\r\n//             name={currentQuestion.name}\r\n//             value={currentQuestion.value}\r\n//             onChange={currentQuestion.onChange}>\r\n            \r\n//             {currentQuestion.options.map((option) => (\r\n//               <option key={option.value} value={option.value}\r\n//               >\r\n//                 {option.label}\r\n//               </option>\r\n//                 ))}\r\n//             </select>\r\n//             )}\r\n\r\n//             {currentQuestion.type === 'radio' && (\r\n//             <div>\r\n//                 {currentQuestion.options.map((option) => (\r\n//                 <label className= \"label-qform\" key={option.value}>\r\n//                     {option.label}\r\n//                     <input\r\n//                     className= \"input-qform\"\r\n//                     type=\"radio\"\r\n//                     name={currentQuestion.name}\r\n//                     value={option.value}\r\n//                     checked={currentQuestion.value === option.value}\r\n//                     onChange={currentQuestion.onChange}\r\n//                     />\r\n//                 </label>\r\n//                 ))}\r\n//             </div>\r\n//             )}\r\n\r\n//             {currentQuestion.type === 'textarea' && (\r\n//             <textarea\r\n//                 name={currentQuestion.name}\r\n//                 value={currentQuestion.value}\r\n//                 onChange={currentQuestion.onChange}\r\n//             />\r\n//             )}\r\n//         </div>\r\n//         </form>\r\n\r\n//         <div class=\"qform-buttons\">\r\n//   { currentQuestionIndex > 0 && (\r\n//     <button className=\"button-qform-NP\" onClick={handlePreviousClick}>Previous</button>\r\n//   )}\r\n//   { currentQuestionIndex < currentQuestions.length - 1 && (\r\n//     <button className=\"button-qform-NP\" onClick={handleNextClick}>Next</button>\r\n//   )}\r\n// </div>\r\n\r\n//   </div>\r\n\r\n//   <div style={{ display: currentQuestionIndex === 3 ? 'block' : 'none' }}>\r\n//     <p>Thank you for submitting the questionnaire!</p>\r\n//     <button className=\"button-qform\" onClick={() => setCurrentQuestionIndex(0)}>Start Over</button>\r\n//   </div>\r\n// </div>\r\n// );\r\n// }\r\n\r\n// export default QuestionnaireForm;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport './MultiPageForm.css';\r\n\r\nfunction MultiPageForm() {\r\n  const [formData, setFormData] = useState({\r\n    textInput: '',\r\n    checkboxInput: false,\r\n    radioInput: '',\r\n    selectInput: '',\r\n    rangeInput: '',\r\n    textareaInput: '',\r\n    textInput2: '',\r\n    textareaInput2: '',\r\n    textInput3: '',\r\n  });\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(3);\r\n\r\n  useEffect(() => {\r\n    // Save form data to local storage whenever formData changes\r\n    localStorage.setItem('formData', JSON.stringify(formData));\r\n  }, [formData]);\r\n\r\n  useEffect(() => {\r\n    // Load form data from local storage when component mounts\r\n    const storedData = localStorage.getItem('formData');\r\n    if (storedData) {\r\n      setFormData(JSON.parse(storedData));\r\n    }\r\n  }, []);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value, type, checked } = event.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: type === 'checkbox' ? checked : value,\r\n    });\r\n  };\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Submit form data to server or do other final processing\r\n    // ...\r\n    alert('Form submitted successfully!');\r\n  };\r\n\r\n  const renderPage1 = () => (\r\n    <div className=\"form-page\">\r\n      <h2>Page 1 of {totalPages}</h2>\r\n      <label>\r\n        Text Input:\r\n        <input\r\n          type=\"text\"\r\n          name=\"textInput\"\r\n          value={formData.textInput}\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Checkbox Input:\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"checkboxInput\"\r\n          checked={formData.checkboxInput}\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Radio Input:\r\n        <br />\r\n        <label>\r\n          Option 1\r\n          <input\r\n            type=\"radio\"\r\n            name=\"radioInput\"\r\n            value=\"option1\"\r\n            checked={formData.radioInput === 'option1'}\r\n            onChange={handleInputChange}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Option 2\r\n          <input\r\n            type=\"radio\"\r\n            name=\"radioInput\"\r\n            value=\"option2\"\r\n            checked={formData.radioInput === 'option2'}\r\n            onChange={handleInputChange}\r\n          />\r\n        </label>\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Select Input:\r\n        <select\r\n          name=\"selectInput\"\r\n          value={formData.selectInput}\r\n          onChange={handleInputChange}\r\n        >\r\n          <option value=\"\">Select an option</option>\r\n          <option value=\"option1\">Option 1</option>\r\n          <option value=\"option2\">Option 2</option>\r\n          <option value=\"option3\">Option 3</option>\r\n        </select>\r\n      </label>\r\n    </div>\r\n  );\r\n\r\n  const renderPage2 = () => (\r\n    <div className=\"form-page\">\r\n      <h2>Page 2 of {totalPages}</h2>\r\n      <label>\r\n        Range Input:\r\n        <input\r\n          type=\"range\"\r\n          name=\"rangeInput\"\r\n          min=\"0\"\r\n          max=\"100\"\r\n          value={formData.rangeInput}\r\n          onChange={handleInputChange}\r\n        />\r\n        <span>{formData.rangeInput}</span>\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Free Text Input:\r\n        <textarea\r\n          name=\"textareaInput\"\r\n          value={formData.textareaInput}\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Text Input 2:\r\n        <input\r\n          type=\"text\"\r\n          name=\"textInput2\"\r\n          value={formData.textInput2}\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n\r\n  const renderPage3 = () => (\r\n    <div className=\"form-page\">\r\n      <h2>Page 3 of {totalPages}</h2>\r\n      <p>Summary of form data:</p>\r\n      <ul>\r\n        <li>Text Input: {formData.textInput}</li>\r\n        <li>Checkbox Input: {formData.checkboxInput ? 'Yes' : 'No'}</li>\r\n        <li>Radio Input: {formData.radioInput}</li>\r\n        <li>Select Input: {formData.selectInput}</li>\r\n        <li>Range Input: {formData.rangeInput}</li>\r\n        <li>Free Text Input: {formData.textareaInput}</li>\r\n        <li>Text Input 2: {formData.textInput2}</li>\r\n      </ul>\r\n      <button type=\"submit\">Submit</button>\r\n    </div>\r\n  );\r\n\r\n  const handlePreviousClick = () => {\r\n    setCurrentPage(currentPage - 1);\r\n  };\r\n\r\n  const handleNextClick = () => {\r\n    setCurrentPage(currentPage + 1);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      {currentPage === 1 && renderPage1()}\r\n      {currentPage === 2 && renderPage2()}\r\n      {currentPage === 3 && renderPage3()}\r\n      <div className=\"form-buttons\">\r\n        {currentPage > 1 && (\r\n          <button type=\"button\" onClick={handlePreviousClick}>\r\n            Previous\r\n          </button>\r\n        )}\r\n        {currentPage < totalPages ? (\r\n          <button type=\"button\" onClick={handleNextClick}>\r\n            Next\r\n          </button>\r\n        ) : (\r\n          <button type=\"submit\">Submit</button>\r\n        )}\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default MultiPageForm;\r\n\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,SAAS,EAAE,EAAE;IACbC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE,EAAE;IACfC,UAAU,EAAE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"},"metadata":{},"sourceType":"module","externalDependencies":[]}