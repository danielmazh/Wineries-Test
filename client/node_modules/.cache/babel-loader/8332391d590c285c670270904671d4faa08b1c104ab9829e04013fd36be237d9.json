{"ast":null,"code":"var _jsxFileName = \"C:\\\\UI-test\\\\Wineries\\\\client\\\\src\\\\common\\\\components\\\\LogIn.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { setJwt } from '../../helpers/auth';\n// import axios from 'axios';\n// import '../../styles/UserForm.css';\n// import { useNavigate } from 'react-router-dom';\n\n// function LogIn(props) {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     try {\n//       const response = await axios.post('/api/login', { email, password });\n//       const { token } = response.data;\n//       setJwt(token);\n//       props.setIsLoggedIn(true);\n//       navigate('/PersonalZone');\n//     } catch (error) {\n//       console.error(error);\n//       setError('Incorrect email or password');\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-form-container\">\n//       <form className=\"login-form\" onSubmit={handleSubmit}><br /><br /><br /><br />\n//         <div className=\"form-input\">\n//           <label htmlFor=\"email\">Email:</label>\n//           <input\n//             type=\"email\"\n//             name=\"email\"\n//             placeholder=\"Enter email\"\n//             required\n//             onChange={(event) => setEmail(event.target.value)}\n//           />\n//         </div>\n//         <div className=\"form-input\">\n//           <label htmlFor=\"password\">Password:</label>\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             placeholder=\"Enter password\"\n//             required\n//             onChange={(event) => setPassword(event.target.value)}\n//           />\n//         </div>\n//         {error && <div className=\"error-message\">{error}</div>}\n//         {/* <div className=\"form-submit\"> */}\n//           <button type=\"submit\">Log In</button>\n//         {/* </div> */}\n\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default LogIn;\n\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LogIn(_ref) {\n  _s();\n  let {\n    setAuthToken\n  } = _ref;\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    // Make POST request to server's /login route with email and password as request body data\n    const response = await fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n\n    // If server responds with a token...\n    if (response.ok) {\n      const {\n        token\n      } = await response.json();\n\n      // Update application state with token\n      setAuthToken(token);\n\n      // Navigate/redirect user to new page\n      navigate('/personal-zone');\n    } else {\n      console.error(await response.text());\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 6\n  }, this);\n}\n_s(LogIn, \"DUrjZFNM1rFkpoRxglG4OItRL0g=\", false, function () {\n  return [useNavigate];\n});\n_c = LogIn;\nexport default LogIn;\nvar _c;\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","LogIn","_ref","_s","setAuthToken","navigate","email","setEmail","password","setPassword","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","token","json","console","error","text","onSubmit","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/UI-test/Wineries/client/src/common/components/LogIn.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { setJwt } from '../../helpers/auth';\r\n// import axios from 'axios';\r\n// import '../../styles/UserForm.css';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// function LogIn(props) {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n//     try {\r\n//       const response = await axios.post('/api/login', { email, password });\r\n//       const { token } = response.data;\r\n//       setJwt(token);\r\n//       props.setIsLoggedIn(true);\r\n//       navigate('/PersonalZone');\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       setError('Incorrect email or password');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-form-container\">\r\n//       <form className=\"login-form\" onSubmit={handleSubmit}><br /><br /><br /><br />\r\n//         <div className=\"form-input\">\r\n//           <label htmlFor=\"email\">Email:</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             name=\"email\"\r\n//             placeholder=\"Enter email\"\r\n//             required\r\n//             onChange={(event) => setEmail(event.target.value)}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-input\">\r\n//           <label htmlFor=\"password\">Password:</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             name=\"password\"\r\n//             placeholder=\"Enter password\"\r\n//             required\r\n//             onChange={(event) => setPassword(event.target.value)}\r\n//           />\r\n//         </div>\r\n//         {error && <div className=\"error-message\">{error}</div>}\r\n//         {/* <div className=\"form-submit\"> */}\r\n//           <button type=\"submit\">Log In</button>\r\n//         {/* </div> */}\r\n        \r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default LogIn;\r\n\r\n\r\n\r\n\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction LogIn({ setAuthToken }) {\r\n\r\n   const navigate = useNavigate();\r\n   const [email,setEmail] = useState('');\r\n   const [password,setPassword] = useState('');\r\n\r\n   async function handleSubmit(event) {\r\n     event.preventDefault();\r\n\r\n     // Make POST request to server's /login route with email and password as request body data\r\n     const response = await fetch('/api/login', {\r\n       method: 'POST',\r\n       headers: { 'Content-Type': 'application/json' },\r\n       body: JSON.stringify({ email,password }),\r\n     });\r\n\r\n     // If server responds with a token...\r\n     if (response.ok) {\r\n       const { token } = await response.json();\r\n\r\n       // Update application state with token\r\n       setAuthToken(token);\r\n\r\n       // Navigate/redirect user to new page\r\n       navigate('/personal-zone');\r\n       \r\n      } else {\r\n        console.error(await response.text());\r\n      }\r\n   }\r\n\r\n   return (\r\n     <form onSubmit={handleSubmit}>\r\n        <input type=\"email\" value={email} onChange={(e)=>setEmail(e.target.value)} />\r\n        <input type=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)} />\r\n        <button type=\"submit\">Log In</button>\r\n     </form>\r\n   );\r\n}\r\n\r\nexport default LogIn;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAKA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,KAAKA,CAAAC,IAAA,EAAmB;EAAAC,EAAA;EAAA,IAAlB;IAAEC;EAAa,CAAC,GAAAF,IAAA;EAE5B,MAAMG,QAAQ,GAAGP,WAAW,EAAE;EAC9B,MAAM,CAACQ,KAAK,EAACC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACW,QAAQ,EAACC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE3C,eAAea,YAAYA,CAACC,KAAK,EAAE;IACjCA,KAAK,CAACC,cAAc,EAAE;;IAEtB;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;MACzCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEb,KAAK;QAACE;MAAS,CAAC;IACzC,CAAC,CAAC;;IAEF;IACA,IAAIK,QAAQ,CAACO,EAAE,EAAE;MACf,MAAM;QAAEC;MAAM,CAAC,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;;MAEvC;MACAlB,YAAY,CAACiB,KAAK,CAAC;;MAEnB;MACAhB,QAAQ,CAAC,gBAAgB,CAAC;IAE3B,CAAC,MAAM;MACLkB,OAAO,CAACC,KAAK,CAAC,MAAMX,QAAQ,CAACY,IAAI,EAAE,CAAC;IACtC;EACH;EAEA,oBACEzB,OAAA;IAAM0B,QAAQ,EAAEhB,YAAa;IAAAiB,QAAA,gBAC1B3B,OAAA;MAAO4B,IAAI,EAAC,OAAO;MAACC,KAAK,EAAEvB,KAAM;MAACwB,QAAQ,EAAGC,CAAC,IAAGxB,QAAQ,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC7EpC,OAAA;MAAO4B,IAAI,EAAC,UAAU;MAACC,KAAK,EAAErB,QAAS;MAACsB,QAAQ,EAAGC,CAAC,IAAGtB,WAAW,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACtFpC,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACjC;AAEZ;AAACjC,EAAA,CAtCQF,KAAK;EAAA,QAEMH,WAAW;AAAA;AAAAuC,EAAA,GAFtBpC,KAAK;AAwCd,eAAeA,KAAK;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}