[{"C:\\UI-test\\Wineries\\client\\src\\index.js":"1","C:\\UI-test\\Wineries\\client\\src\\App.js":"2","C:\\UI-test\\Wineries\\client\\src\\reportWebVitals.js":"3","C:\\UI-test\\Wineries\\client\\src\\common\\components\\singUp.js":"4","C:\\UI-test\\Wineries\\client\\src\\routes\\AppRoutes.js":"5","C:\\UI-test\\Wineries\\client\\src\\pages\\login\\SignUpPage.js":"6","C:\\UI-test\\Wineries\\client\\src\\pages\\HomePage.js":"7","C:\\UI-test\\Wineries\\client\\src\\common\\components\\NavBar.js":"8","C:\\UI-test\\Wineries\\client\\src\\common\\components\\SingUp.js":"9","C:\\UI-test\\Wineries\\client\\src\\common\\components\\LogIn.js":"10","C:\\UI-test\\Wineries\\client\\src\\pages\\login\\LogInPage.js":"11","C:\\UI-test\\Wineries\\client\\src\\helpers\\auth.js":"12","C:\\UI-test\\Wineries\\client\\src\\pages\\PersonalZonePage.js":"13","C:\\UI-test\\Wineries\\client\\src\\common\\components\\QuestionnaireForm.js":"14","C:\\UI-test\\Wineries\\client\\src\\common\\components\\inner-component\\react-datepicker.js":"15","C:\\UI-test\\Wineries\\client\\src\\pages\\UserDataPage.js":"16","C:\\UI-test\\Wineries\\client\\src\\common\\components\\UserData.js":"17"},{"size":526,"mtime":1678998127621,"results":"18","hashOfConfig":"19"},{"size":736,"mtime":1679511533462,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1678995605119,"results":"21","hashOfConfig":"19"},{"size":1333,"mtime":1678997007726,"results":"22","hashOfConfig":"19"},{"size":901,"mtime":1679996192548,"results":"23","hashOfConfig":"19"},{"size":275,"mtime":1679037939297,"results":"24","hashOfConfig":"19"},{"size":344,"mtime":1679544989403,"results":"25","hashOfConfig":"19"},{"size":1211,"mtime":1679864493390,"results":"26","hashOfConfig":"19"},{"size":2280,"mtime":1679864417173,"results":"27","hashOfConfig":"19"},{"size":2150,"mtime":1679985125317,"results":"28","hashOfConfig":"19"},{"size":426,"mtime":1679529501622,"results":"29","hashOfConfig":"19"},{"size":380,"mtime":1679545060459,"results":"30","hashOfConfig":"19"},{"size":689,"mtime":1679813802702,"results":"31","hashOfConfig":"19"},{"size":18456,"mtime":1680002286193,"results":"32","hashOfConfig":"19"},{"size":599,"mtime":1679813170457,"results":"33","hashOfConfig":"19"},{"size":1757,"mtime":1679998197000,"results":"34","hashOfConfig":"19"},{"size":1666,"mtime":1680003774270,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"363c0f",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"39"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\UI-test\\Wineries\\client\\src\\index.js",[],[],[],"C:\\UI-test\\Wineries\\client\\src\\App.js",["94"],[],"import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"././styles/App.css\";\nimport NavBar from \"./common/components/NavBar\";\nimport SignUp from \"./common/components/SingUp\";\n\nfunction App() {\n  const [data, setData] = React.useState(null);\n  const [authToken, setAuthToken] = React.useState(null);\n\n  React.useEffect(() => {\n    fetch(\"/api\")\n      .then((res) => res.json())\n      .then((data) => setData(data.message));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <NavBar authToken={authToken} />\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>{!data ? \"Loading...\" : data}</p>\n        <SignUp />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\UI-test\\Wineries\\client\\src\\reportWebVitals.js",[],[],"C:\\UI-test\\Wineries\\client\\src\\common\\components\\singUp.js",[],[],[],"C:\\UI-test\\Wineries\\client\\src\\routes\\AppRoutes.js",[],[],"C:\\UI-test\\Wineries\\client\\src\\pages\\login\\SignUpPage.js",[],[],"C:\\UI-test\\Wineries\\client\\src\\pages\\HomePage.js",[],[],"C:\\UI-test\\Wineries\\client\\src\\common\\components\\NavBar.js",[],[],"C:\\UI-test\\Wineries\\client\\src\\common\\components\\SingUp.js",[],[],"C:\\UI-test\\Wineries\\client\\src\\common\\components\\LogIn.js",[],[],"C:\\UI-test\\Wineries\\client\\src\\pages\\login\\LogInPage.js",[],[],"C:\\UI-test\\Wineries\\client\\src\\helpers\\auth.js",[],[],"C:\\UI-test\\Wineries\\client\\src\\pages\\PersonalZonePage.js",["95"],[],"import React, { useState } from 'react';\r\nimport NavBar from '../common/components/NavBar';\r\nimport QuestionnaireForm from '../common/components/QuestionnaireForm';\r\nimport '../styles/QuestionnaireForm.css';\r\n\r\nfunction PersonalZonePage() {\r\n  const authToken = localStorage.getItem('token');\r\n\r\n  return (\r\n    <div className=\"user-form-container\">\r\n    <>\r\n      <NavBar authToken={authToken} setIsLoggedIn={null} />\r\n      <br />\r\n      {authToken ? (\r\n        <>\r\n        <QuestionnaireForm />\r\n        </>\r\n\r\n      ) : (\r\n        <p style={{ textAlign: 'center' }}>Please log in to access this content.</p>\r\n      )}\r\n    </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PersonalZonePage;\r\n","C:\\UI-test\\Wineries\\client\\src\\common\\components\\QuestionnaireForm.js",["96","97","98","99","100","101","102","103","104","105","106","107","108","109","110"],[],"import React, { useState, useEffect } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport Select, { components } from 'react-select';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../../styles//QuestionnaireForm.css';\r\nimport './inner-component/react-datepicker'\r\n\r\n\r\n\r\n\r\n\r\nfunction MultiPageForm() {\r\n  const [formData, setFormData] = useState({\r\n    TourArea: '',\r\n    TourCount: '',\r\n    textInput: '',\r\n    TourTimeMorning: false,\r\n    TourTimeAfternoon: false,\r\n    TourTimeEvening: false,\r\n    selectedDate: null,\r\n    TourAttractions: false,\r\n    selectedAttractionsOptions: [],\r\n    TourRestaurant: false,\r\n    selectedRestaurantOptions: [],\r\n    KosherType: false,\r\n    rangeInput: '',\r\n\r\n  });\r\n\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [totalPages, setTotalPages] = useState(3);\r\n\r\n  const storedData = JSON.parse(localStorage.getItem('formData'));\r\n  const email = localStorage.getItem('email');\r\n\r\n  const selectedDay = formData.selectedDate ? formData.selectedDate.toLocaleDateString('he-IL', { weekday: 'long' }) : '';\r\n  const selectedDayText = `היום שנבחר הוא ${selectedDay}`;\r\n\r\n  const [showOptions, setShowOptions] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  const { Option } = components;\r\n  const [showAttractionsOptions, setShowAttractionsOptions] = useState(false);\r\n  const [selectedAttractionsOption, setSelectedAttractionsOption] = useState('');\r\n  const [showRestaurantOptions, setShowRestaurantOptions] = useState(false);\r\n  const [selectedRestaurantOption, setSelectedRestaurantOption] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n\r\n  \r\n  const handleSelectChange = (selectedOptions, checkboxName) => {\r\n    const selectedValues = selectedOptions ? selectedOptions.map(option => option.value) : [];\r\n    const selectedValuesString = selectedValues.join(',');\r\n\r\n    if (checkboxName === 'TourAttractions') {\r\n      setFormData({\r\n        ...formData,\r\n        selectedAttractionsOptions: selectedValues,\r\n      });\r\n    } else if (checkboxName === 'TourRestaurant') {\r\n      setFormData({\r\n        ...formData,\r\n        selectedRestaurantOptions: selectedValues,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value, type, checked } = event.target;\r\n    const newValue = type === 'checkbox' ? checked : value;\r\n  \r\n    if (name === 'TourAttractions') {\r\n      setShowAttractionsOptions(checked);\r\n      setSelectedAttractionsOption('');\r\n      setFormData({\r\n        ...formData,\r\n        selectedAttractionsOptions: [],\r\n        [name]: newValue,\r\n      });\r\n    } else if (name === 'TourRestaurant') {\r\n      setShowRestaurantOptions(checked);\r\n      setSelectedRestaurantOption('');\r\n      setFormData({\r\n        ...formData,\r\n        selectedRestaurantOptions: [],\r\n        [name]: newValue,\r\n      });\r\n    } else {\r\n      setFormData({\r\n        ...formData,\r\n        [name]: newValue,\r\n      });\r\n    }\r\n  \r\n    if (name === 'selectedDate') {\r\n      localStorage.setItem('formData', JSON.stringify({ ...formData, [name]: newValue }));\r\n      document.querySelector('.react-datepicker__close-icon').click();\r\n    }\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    // Save form data to local storage whenever formData changes\r\n    localStorage.setItem('formData', JSON.stringify(formData));\r\n    }, [formData, showOptions, selectedOption]);\r\n    \r\n\r\n\r\n  useEffect(() => {\r\n    // Load form data from local storage when component mounts\r\n    const storedData = localStorage.getItem('formData');\r\n    if (storedData) {\r\n      setFormData(JSON.parse(storedData));\r\n    }\r\n  }, []);\r\n  \r\n  \r\n  // const handleFormSubmit = (event) => {\r\n  //   console.log('currentPage', currentPage);\r\n  //   event.preventDefault();\r\n  //   // Submit form data to server or do other final processing\r\n  //   // ...\r\n  //   alert('Form submitted successfully!');\r\n  // };\r\n\r\n\r\n// ADDED - TEST\r\n// const handleFormSubmit = async (event) => {\r\n//   event.preventDefault();\r\n//   const storedData = JSON.parse(localStorage.getItem('formData'));\r\n//   try {\r\n//     const response = await axios.post('/api/userdata', { formData });\r\n//     const { token } = response.data;\r\n//     setJwt(token);\r\n//     localStorage.setItem('token', token);\r\n//     localStorage.setItem('email', email);\r\n//     props.setIsLoggedIn(true); \r\n//     navigate(`/userdata/${token}`);\r\n//     console.log('userdata loaded Success');\r\n//   } catch (error) {\r\n//     console.error(error);\r\n//     setError('Incorrect email or password');\r\n//   }\r\n// };\r\n\r\n\r\n\r\n// ADDED - TEST\r\n// const handleFormSubmit = async (event) => {\r\n//   event.preventDefault();\r\n//   const storedData = JSON.parse(localStorage.getItem('formData'));\r\n\r\n//   const token = localStorage.getItem('token');\r\n//   navigate(`/TourDataSystemPage/${token}`);\r\n\r\n//   const QuestionnaireFormData = {\r\n//     TourArea: storedData.TourArea,\r\n//     TourCount: storedData.TourCount,\r\n//     TourTimeMorning: storedData.TourTimeMorning,\r\n//     TourTimeAfternoon: storedData.TourTimeAfternoon,\r\n//     TourTimeEvening: storedData.TourTimeEvening,\r\n//     selectedDate: storedData.selectedDate,\r\n//     TourAttractions: storedData.TourAttractions,\r\n//     selectedAttractionsOptions: storedData.selectedAttractionsOptions,\r\n//     TourRestaurant: storedData.TourRestaurant,\r\n//     selectedRestaurantOptions: storedData.selectedRestaurantOptions,\r\n//     KosherType: storedData.KosherType,\r\n//     BudgetPerson: storedData.BudgetPerson,\r\n//   };\r\n\r\n//   try {\r\n//     const response = await fetch('/SubmitFormData', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json'\r\n//       },\r\n//       body: JSON.stringify(QuestionnaireFormData)\r\n//     });\r\n\r\n//     if (response.ok) {\r\n//       const data = await response.json();\r\n\r\n//       console.log('Server response:', data);\r\n//       navigate('/userdata');\r\n//     } else {\r\n//       console.error('Server response not ok');\r\n//     }\r\n//   } catch (error) {\r\n//     console.error('Error submitting form data:', error);\r\n//   }\r\n// };\r\n\r\n// ADDED - TEST\r\nasync function handleFormSubmit() {\r\n  const storedData = JSON.parse(localStorage.getItem('formData'));\r\n  console.log('Stored data from localStorage:', storedData);\r\n\r\n\r\n  const QuestionnaireFormData = {\r\n    TourArea: storedData.TourArea,\r\n    TourCount: storedData.TourCount,\r\n    TourTimeMorning: storedData.TourTimeMorning,\r\n    TourTimeAfternoon: storedData.TourTimeAfternoon,\r\n    TourTimeEvening: storedData.TourTimeEvening,\r\n    selectedDate: storedData.selectedDate,\r\n    TourAttractions: storedData.TourAttractions,\r\n    selectedAttractionsOptions: storedData.selectedAttractionsOptions,\r\n    TourRestaurant: storedData.TourRestaurant,\r\n    selectedRestaurantOptions: storedData.selectedRestaurantOptions,\r\n    KosherType: storedData.KosherType,\r\n    BudgetPerson: storedData.BudgetPerson,\r\n  };\r\n  console.log('QuestionnaireFormData:', QuestionnaireFormData);\r\n\r\n  try {\r\n    const response = await fetch(\"/api/userdata\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ QuestionnaireFormData })\r\n    });\r\n    console.log('Response from server:', response);\r\n\r\n    if (response.ok) {\r\n      console.log('FormData received successfully');\r\n      navigate('/userdata');\r\n    } else {\r\n      console.error('Error receiving FormData');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error submitting FormData:', error);\r\n    console.error('Response from server:', error.response);\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n// ************************************************************************************************\r\n\r\n\r\n  const handleOptionChange = (event) => {\r\n    setSelectedOption(event.target.value);\r\n  };\r\n\r\n\r\n  // ********** Page0 **********\r\n  const renderPage0 = () => (\r\n    <div>\r\n      <h1 style={{textAlign: 'center', color: 'rgba(0, 0, 0, 0)'}}>-------------------------------------------------</h1>\r\n      <h1 style={{textAlign: 'center'}}>ברוכים הבאים</h1> \r\n      <h2 style={{textAlign: 'center'}}>{email}</h2>\r\n      {/* <p>{JSON.stringify(localStorage)}</p> */}\r\n\r\n      <br />\r\n      <br />\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n\r\n// ********** Page1 **********\r\n  const renderPage1 = () => (\r\n    <div>\r\n      <h1 style={{textAlign: 'center', color: 'rgba(0, 0, 0, 0)'}}>-------------------------------------------------</h1>\r\n      <h4 style={{textAlign: 'center'}}>עמוד 1 מתוך {totalPages}</h4>\r\n\r\n      <label>\r\n        :בחרו איזור לסיור היין שלכם\r\n        <br /><select \r\n          name=\"TourArea\"\r\n          value={formData.TourArea}\r\n          onChange={handleInputChange}\r\n        >\r\n          <option value=\"\">יש לבחור מהרשימה</option>\r\n          <option value=\"Jerusalem\">ירושלים</option>\r\n          <option value=\"Center\">מרכז</option>\r\n          <option value=\"North\">צפון</option>\r\n        </select>\r\n      </label>\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <label>\r\n        :בחרו תאריך לסיור היין שלכם\r\n        <br />\r\n\r\n        <DatePicker\r\n          selected={formData.selectedDate}\r\n          onChange={(date) => setFormData({...formData, selectedDate: date})}\r\n          placeholderText=\"יש לבחור תאריך\"\r\n          dateFormat=\"dd/MM/yyyy\"\r\n        />\r\n\r\n\r\n          {formData.selectedDate && (\r\n          <p>{`היום שנבחר הוא ${selectedDay}`}</p>\r\n          )}\r\n      </label>\r\n\r\n    \r\n\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <label>\r\n        :בכמה יקבים תרצו לסייר בסיור היין שלכם\r\n        <br /><select \r\n          name=\"TourCount\"\r\n          value={formData.TourCount}\r\n          onChange={handleInputChange}\r\n        >\r\n          <option value=\"\">יש לבחור מהרשימה</option>\r\n          <option value=\"1\">1</option>\r\n          <option value=\"2\">2</option>\r\n          <option value=\"3\">3</option>\r\n        </select>\r\n      </label>\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <label  class=\"form-data-list\">:מהן שעות הסיור הרצויות עבורכם\r\n        <br />\r\n        <br />\r\n\r\n        <>בוקר<input\r\n          className=\"form-checkbox-input\"\r\n          type=\"checkbox\"\r\n          name=\"TourTimeMorning\"\r\n          checked={formData.TourTimeMorning}\r\n          onChange={handleInputChange}\r\n        />\r\n        </>\r\n        \r\n        <br /><br />\r\n\r\n        <>צהריים<input\r\n          className=\"form-checkbox-input\"\r\n          type=\"checkbox\"\r\n          name=\"TourTimeAfternoon\"\r\n          checked={formData.TourTimeAfternoon}\r\n          onChange={handleInputChange}\r\n        />\r\n        </>\r\n\r\n        <br /><br />\r\n\r\n        <>ערב<input\r\n          className=\"form-checkbox-input\"\r\n          type=\"checkbox\"\r\n          name=\"TourTimeEvening\"\r\n          checked={formData.TourTimeEvening}\r\n          onChange={handleInputChange}\r\n        />\r\n        </>\r\n      </label>\r\n\r\n      <br />\r\n\r\n\r\n    </div>\r\n  );\r\n\r\n\r\n\r\n\r\n  // ********** Page2 **********\r\n  const renderPage2 = () => (\r\n    <div >\r\n      <h1 style={{textAlign: 'center', color: 'rgba(0, 0, 0, 0)'}}>-------------------------------------------------</h1>\r\n      <h4 style={{textAlign: 'center'}}>עמוד 2 מתוך {totalPages}</h4>\r\n\r\n      <label>\r\n        :מספר אנשים בסיור\r\n        <br /><select \r\n          name=\"TourPeopleCount\"\r\n          value={formData.TourPeopleCount}\r\n          onChange={handleInputChange}\r\n        >\r\n          <option value=\"\">יש לבחור מהרשימה</option>\r\n          <option value=\"1-2\">1-2</option>\r\n          <option value=\"2-5\">2-4</option>\r\n          <option value=\"5+\">5+</option>\r\n        </select>\r\n      </label>\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <label>\r\n        :תקציב רצוי לאדם\r\n        <br /><input\r\n          type=\"range\"\r\n          name=\"rangeInput\"\r\n          min=\"50\"\r\n          max=\"500\"\r\n          value={formData.rangeInput}\r\n          onChange={handleInputChange}\r\n        />\r\n        <span className=\"form-input-container\">{formData.rangeInput}</span>\r\n      </label>\r\n\r\n      <br />\r\n      <br />\r\n\r\n\r\n\r\n      <label>\r\n        אטרקציות ובילויים\r\n        <input \r\n          className=\"form-checkbox-input\"\r\n          type=\"checkbox\"\r\n          name=\"TourAttractions\"\r\n          checked={formData.TourAttractions}\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n\r\n      {formData.TourAttractions && (\r\n        <div className=\"form-group\"><br />\r\n          <label htmlFor=\"selectedAttractionsOptions\">:יש לבחור לפחות אחת מהאפשרויות</label>\r\n          <Select\r\n            id=\"selectedAttractionsOptions\"\r\n            isMulti\r\n            options={[        \r\n              { value: 'Wine-Tasting ', label: 'טעימות יין' },        \r\n              { value: 'Vineyard-Tour ', label: 'סיור כרמים' },        \r\n              { value: 'Wine-Making-Workshop ', label: 'סדנת הכנת יין' },        \r\n              { value: 'Motorized-Tour-Using-ATVs ', label: 'סיור ממונע באמצעות טרקטורונים' },        \r\n              { value: 'Private-Events ', label: 'אירועים פרטיים' },        \r\n              { value: 'Collecting-Edible-Wild-Plants ', label: 'ליקוט צמחי בר אכילים' },\r\n              ]}\r\n\r\n            value={formData.selectedAttractionsOptions.map(value => ({ value, label: value }))}\r\n            onChange={(selectedOptions) => handleSelectChange(selectedOptions, 'TourAttractions')}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <label>\r\n        כשרות היקב<input\r\n          type=\"checkbox\"\r\n          name=\"KosherType\"\r\n          checked={formData.KosherType}\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        </label>\r\n\r\n        <br />\r\n        <br />\r\n\r\n      <label>\r\n        מסעדה במקום\r\n        <input \r\n          className=\"form-checkbox-input\"\r\n          type=\"checkbox\"\r\n          name=\"TourRestaurant\"\r\n          checked={formData.TourRestaurant}\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n\r\n      {formData.TourRestaurant && (\r\n        <div className=\"form-group\"><br />\r\n          <label htmlFor=\"selectedRestaurantOptions\">:יש לבחור לפחות אחת מהאפשרויות</label>\r\n          <Select\r\n            id=\"selectedRestaurantOptions\"\r\n            isMulti\r\n            options={[        \r\n              { value: 'Dairy-Restaurant ', label: 'מסעדה חלבית' },        \r\n              { value: 'Meat-Restaurant ', label: 'מסעדה בשרית' },        \r\n              { value: 'Fish-Restaurant ', label: 'מסעדת דגים' },        \r\n              { value: 'Vegan-Restaurant ', label: 'מסעדה טבעונית' },      \r\n            ]}\r\n            \r\n            value={formData.selectedRestaurantOptions.map(value => ({ value, label: value }))}\r\n            onChange={(selectedOptions) => handleSelectChange(selectedOptions, 'TourRestaurant')}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n    <br />\r\n    <br />\r\n\r\n\r\n    </div>\r\n  );\r\n\r\n\r\n  // ********** Page3 **********\r\n  const renderPage3 = () => (\r\n    <div>\r\n      <h1 style={{textAlign: 'center', color: 'rgba(0, 0, 0, 0)'}}>-------------------------------------------------</h1>\r\n      <h4 style={{textAlign: 'center'}}>עמוד 3 מתוך {totalPages}</h4>\r\n      <p>סיכום הנתונים:</p>\r\n\r\n      <ul class=\"form-data-list\">\r\n        <li>איזור הסיור המבוקש: {formData.TourArea}</li>\r\n        <li>מספר משתתפים בסיור: {formData.TourCount}</li>\r\n\r\n        <li>שעות הבוקר?: {formData.TourTimeMorning ? 'Yes' : 'No'}</li>\r\n        <li>שעות הצהריים?: {formData.TourTimeAfternoon ? 'Yes' : 'No'}</li>\r\n        <li>שעות הערב?: {formData.TourTimeEvening ? 'Yes' : 'No'}</li>\r\n\r\n        <li>תאריך של הסיור: {formData.selectedDate ? formData.selectedDate.toLocaleDateString('he-IL', { weekday: 'long' }) + ' ' + formData.selectedDate.toLocaleDateString('he-IL') : 'No date selected'}</li>\r\n        <li>אטרקציות? {formData.TourAttractions ? 'Yes' : 'No'}</li>\r\n        <li>אטרקציות מבוקשות: {formData.selectedAttractionsOptions}</li>\r\n\r\n        <li>כשרות? {formData.KosherType ? 'Yes' : 'No'}</li>\r\n\r\n        <li>מסעדה? {formData.TourRestaurant ? 'Yes' : 'No'}</li>\r\n        <li>מסעדות מבוקשות: {formData.selectedRestaurantOptions}</li>\r\n\r\n        <li>תקציב לאדם: {formData.rangeInput}</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n\r\n  // ********** Buttons **********\r\n  const handlePreviousClick = () => {\r\n    console.log('currentPage', currentPage);\r\n    setCurrentPage(currentPage - 1);\r\n  };\r\n\r\n  const handleNextClick = () => {\r\n    console.log('currentPage', currentPage);\r\n    setCurrentPage(currentPage + 1);\r\n  };\r\n\r\n\r\n  // ********** Form **********\r\n  return (\r\n    <div dir=\"rtl\"><br /><br /><br />\r\n    <div className='Question-form-container'>\r\n      <form className='Question-form' onSubmit={handleFormSubmit}>\r\n        {currentPage === 0 && renderPage0()}\r\n        {currentPage === 1 && renderPage1()}\r\n        {currentPage === 2 && renderPage2()}\r\n        {currentPage === 3 && renderPage3()}\r\n\r\n          {currentPage == 0 && (\r\n          <>\r\n          <button className=\"Question-buttons-main-001\" type=\"button\" onClick={handleNextClick}>החלו לתכנן!</button>\r\n          </>\r\n          )}\r\n\r\n          {currentPage == 1 && (\r\n          <>\r\n          <button className=\"Question-buttons-main-001\" type=\"button\" onClick={handleNextClick}>הבא</button>\r\n          </>\r\n          )}\r\n\r\n          {currentPage == 2 && (\r\n          <>\r\n          <button className=\"Question-buttons-main-001\" type=\"button\" onClick={handlePreviousClick}>הקודם</button>\r\n          <button className=\"Question-buttons-main-001\" type=\"button\" onClick={handleNextClick}>הבא</button>\r\n          </> \r\n          )}\r\n\r\n\r\n          {currentPage == 3  && (\r\n          <>\r\n          <button className=\"Question-buttons-main-001\" type=\"button\" onClick={handlePreviousClick}>הקודם</button>\r\n          <button className=\"Question-buttons-main-001\" type=\"submit\">סיימתי!</button>\r\n          </>\r\n          )}\r\n\r\n        <br />\r\n        <br />\r\n\r\n      </form>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MultiPageForm;\r\n\r\n\r\n",[],"C:\\UI-test\\Wineries\\client\\src\\common\\components\\inner-component\\react-datepicker.js",[],[],"C:\\UI-test\\Wineries\\client\\src\\pages\\UserDataPage.js",[],[],[],"C:\\UI-test\\Wineries\\client\\src\\common\\components\\UserData.js",[],[],{"ruleId":"111","severity":1,"message":"112","line":9,"column":21,"nodeType":"113","messageId":"114","endLine":9,"endColumn":33},{"ruleId":"111","severity":1,"message":"115","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"116","line":31,"column":22,"nodeType":"113","messageId":"114","endLine":31,"endColumn":35},{"ruleId":"111","severity":1,"message":"117","line":33,"column":9,"nodeType":"113","messageId":"114","endLine":33,"endColumn":19},{"ruleId":"111","severity":1,"message":"118","line":37,"column":9,"nodeType":"113","messageId":"114","endLine":37,"endColumn":24},{"ruleId":"111","severity":1,"message":"119","line":39,"column":23,"nodeType":"113","messageId":"114","endLine":39,"endColumn":37},{"ruleId":"111","severity":1,"message":"120","line":41,"column":11,"nodeType":"113","messageId":"114","endLine":41,"endColumn":17},{"ruleId":"111","severity":1,"message":"121","line":42,"column":10,"nodeType":"113","messageId":"114","endLine":42,"endColumn":32},{"ruleId":"111","severity":1,"message":"122","line":43,"column":10,"nodeType":"113","messageId":"114","endLine":43,"endColumn":35},{"ruleId":"111","severity":1,"message":"123","line":44,"column":10,"nodeType":"113","messageId":"114","endLine":44,"endColumn":31},{"ruleId":"111","severity":1,"message":"124","line":45,"column":10,"nodeType":"113","messageId":"114","endLine":45,"endColumn":34},{"ruleId":"111","severity":1,"message":"125","line":52,"column":11,"nodeType":"113","messageId":"114","endLine":52,"endColumn":31},{"ruleId":"111","severity":1,"message":"126","line":243,"column":9,"nodeType":"113","messageId":"114","endLine":243,"endColumn":27},{"ruleId":"127","severity":1,"message":"128","line":550,"column":24,"nodeType":"129","messageId":"130","endLine":550,"endColumn":26},{"ruleId":"127","severity":1,"message":"128","line":556,"column":24,"nodeType":"129","messageId":"130","endLine":556,"endColumn":26},{"ruleId":"127","severity":1,"message":"128","line":562,"column":24,"nodeType":"129","messageId":"130","endLine":562,"endColumn":26},{"ruleId":"127","severity":1,"message":"128","line":570,"column":24,"nodeType":"129","messageId":"130","endLine":570,"endColumn":26},"no-unused-vars","'setAuthToken' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'setTotalPages' is assigned a value but never used.","'storedData' is assigned a value but never used.","'selectedDayText' is assigned a value but never used.","'setShowOptions' is assigned a value but never used.","'Option' is assigned a value but never used.","'showAttractionsOptions' is assigned a value but never used.","'selectedAttractionsOption' is assigned a value but never used.","'showRestaurantOptions' is assigned a value but never used.","'selectedRestaurantOption' is assigned a value but never used.","'selectedValuesString' is assigned a value but never used.","'handleOptionChange' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]